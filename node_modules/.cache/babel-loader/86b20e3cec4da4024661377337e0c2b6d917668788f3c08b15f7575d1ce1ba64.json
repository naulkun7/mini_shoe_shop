{"ast":null,"code":"import { message } from \"antd\";\nimport { shoeArr } from \"../../data\";\nimport { BUY_SHOE, CHANGE_QUANTITY, REMOVE_SHOE, VIEW_DETAIL } from \"../constant/shoe\";\nlet initialState = {\n  shoeArr: shoeArr,\n  detail: shoeArr[1],\n  cart: []\n};\nexport let shoeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case BUY_SHOE:\n      {\n        let cloneCart = [...state.cart];\n        var index = cloneCart.findIndex(item => {\n          return item.id == action.payload.id;\n        });\n        if (index == -1) {\n          let newShoe = {\n            ...action.payload,\n            soLuong: 1\n          };\n          cloneCart.push(newShoe);\n        } else {\n          cloneCart[index].soLuong++;\n        }\n        state.cart = cloneCart;\n        return {\n          ...state\n        };\n      }\n    case VIEW_DETAIL:\n      {\n        state.detail = action.payload;\n        return {\n          ...state\n        };\n      }\n    case REMOVE_SHOE:\n      {\n        let cloneCart = [...state.cart];\n        let index = cloneCart.findIndex(item => item.id == action.payload);\n        cloneCart.splice(index, 1);\n        message.success(\"Xoá thành công\");\n        return {\n          ...state,\n          cart: cloneCart\n        };\n      }\n    case CHANGE_QUANTITY:\n      {\n        let {\n          id,\n          option\n        } = action.payload;\n        let cloneCart = [...state.cart];\n        let index = cloneCart.findIndex(item => item.id === id);\n        cloneCart[index].soLuong = cloneCart[index].soLuong + option;\n        cloneCart[index].soLuong == 0 && cloneCart.splice(index, 1);\n        return {\n          ...state,\n          cart: cloneCart\n        };\n      }\n    default:\n      {\n        return state;\n      }\n  }\n};","map":{"version":3,"names":["message","shoeArr","BUY_SHOE","CHANGE_QUANTITY","REMOVE_SHOE","VIEW_DETAIL","initialState","detail","cart","shoeReducer","state","action","type","cloneCart","index","findIndex","item","id","payload","newShoe","soLuong","push","splice","success","option"],"sources":["/Users/luannguyen/Developer/hw-reactjs-b04-main/src/Shoe_Redux/redux/reducer/reducer.js"],"sourcesContent":["import { message } from \"antd\"\nimport { shoeArr } from \"../../data\"\nimport {\n  BUY_SHOE,\n  CHANGE_QUANTITY,\n  REMOVE_SHOE,\n  VIEW_DETAIL,\n} from \"../constant/shoe\"\n\nlet initialState = {\n  shoeArr: shoeArr,\n  detail: shoeArr[1],\n  cart: [],\n}\n\nexport let shoeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case BUY_SHOE: {\n      let cloneCart = [...state.cart]\n      var index = cloneCart.findIndex((item) => {\n        return item.id == action.payload.id\n      })\n      if (index == -1) {\n        let newShoe = { ...action.payload, soLuong: 1 }\n        cloneCart.push(newShoe)\n      } else {\n        cloneCart[index].soLuong++\n      }\n      state.cart = cloneCart\n      return { ...state }\n    }\n    case VIEW_DETAIL: {\n      state.detail = action.payload\n      return { ...state }\n    }\n    case REMOVE_SHOE: {\n      let cloneCart = [...state.cart]\n      let index = cloneCart.findIndex((item) => item.id == action.payload)\n      cloneCart.splice(index, 1)\n      message.success(\"Xoá thành công\")\n      return { ...state, cart: cloneCart }\n    }\n    case CHANGE_QUANTITY: {\n      let { id, option } = action.payload\n      let cloneCart = [...state.cart]\n      let index = cloneCart.findIndex((item) => item.id === id)\n      cloneCart[index].soLuong = cloneCart[index].soLuong + option\n      cloneCart[index].soLuong == 0 && cloneCart.splice(index, 1)\n      return { ...state, cart: cloneCart }\n    }\n    default: {\n      return state\n    }\n  }\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,MAAM;AAC9B,SAASC,OAAO,QAAQ,YAAY;AACpC,SACEC,QAAQ,EACRC,eAAe,EACfC,WAAW,EACXC,WAAW,QACN,kBAAkB;AAEzB,IAAIC,YAAY,GAAG;EACjBL,OAAO,EAAEA,OAAO;EAChBM,MAAM,EAAEN,OAAO,CAAC,CAAC,CAAC;EAClBO,IAAI,EAAE;AACR,CAAC;AAED,OAAO,IAAIC,WAAW,GAAGA,CAACC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,KAAK;EACzD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKV,QAAQ;MAAE;QACb,IAAIW,SAAS,GAAG,CAAC,GAAGH,KAAK,CAACF,IAAI,CAAC;QAC/B,IAAIM,KAAK,GAAGD,SAAS,CAACE,SAAS,CAAEC,IAAI,IAAK;UACxC,OAAOA,IAAI,CAACC,EAAE,IAAIN,MAAM,CAACO,OAAO,CAACD,EAAE;QACrC,CAAC,CAAC;QACF,IAAIH,KAAK,IAAI,CAAC,CAAC,EAAE;UACf,IAAIK,OAAO,GAAG;YAAE,GAAGR,MAAM,CAACO,OAAO;YAAEE,OAAO,EAAE;UAAE,CAAC;UAC/CP,SAAS,CAACQ,IAAI,CAACF,OAAO,CAAC;QACzB,CAAC,MAAM;UACLN,SAAS,CAACC,KAAK,CAAC,CAACM,OAAO,EAAE;QAC5B;QACAV,KAAK,CAACF,IAAI,GAAGK,SAAS;QACtB,OAAO;UAAE,GAAGH;QAAM,CAAC;MACrB;IACA,KAAKL,WAAW;MAAE;QAChBK,KAAK,CAACH,MAAM,GAAGI,MAAM,CAACO,OAAO;QAC7B,OAAO;UAAE,GAAGR;QAAM,CAAC;MACrB;IACA,KAAKN,WAAW;MAAE;QAChB,IAAIS,SAAS,GAAG,CAAC,GAAGH,KAAK,CAACF,IAAI,CAAC;QAC/B,IAAIM,KAAK,GAAGD,SAAS,CAACE,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,IAAIN,MAAM,CAACO,OAAO,CAAC;QACpEL,SAAS,CAACS,MAAM,CAACR,KAAK,EAAE,CAAC,CAAC;QAC1Bd,OAAO,CAACuB,OAAO,CAAC,gBAAgB,CAAC;QACjC,OAAO;UAAE,GAAGb,KAAK;UAAEF,IAAI,EAAEK;QAAU,CAAC;MACtC;IACA,KAAKV,eAAe;MAAE;QACpB,IAAI;UAAEc,EAAE;UAAEO;QAAO,CAAC,GAAGb,MAAM,CAACO,OAAO;QACnC,IAAIL,SAAS,GAAG,CAAC,GAAGH,KAAK,CAACF,IAAI,CAAC;QAC/B,IAAIM,KAAK,GAAGD,SAAS,CAACE,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;QACzDJ,SAAS,CAACC,KAAK,CAAC,CAACM,OAAO,GAAGP,SAAS,CAACC,KAAK,CAAC,CAACM,OAAO,GAAGI,MAAM;QAC5DX,SAAS,CAACC,KAAK,CAAC,CAACM,OAAO,IAAI,CAAC,IAAIP,SAAS,CAACS,MAAM,CAACR,KAAK,EAAE,CAAC,CAAC;QAC3D,OAAO;UAAE,GAAGJ,KAAK;UAAEF,IAAI,EAAEK;QAAU,CAAC;MACtC;IACA;MAAS;QACP,OAAOH,KAAK;MACd;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}